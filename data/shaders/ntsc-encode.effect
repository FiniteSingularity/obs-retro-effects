uniform float4x4 ViewProj;
uniform texture2d image;
uniform float2 uv_size;

sampler_state textureSampler{
    Filter = Linear;
    AddressU = Clamp;
    AddressV = Clamp;
    MinLOD = 0;
    MaxLOD = 0;
};

float3 rgb2yiq(float3 color)
{
	float3x3 yiq = {
		0.2989, 0.5959, 0.2115,
		0.5870, -0.2744, -0.5229,
		0.1140, -0.3216, 0.3114
	};

	return mul(yiq, color);
}

struct VertData
{
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
};

VertData mainTransform(VertData v_in)
{
	v_in.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	return v_in;
}

float4 mainImage(VertData v_in) : TARGET
{
	float4 color = image.Sample(textureSampler, v_in.uv);
	float3 yiq = rgb2yiq(color.rgb);
	
	return float4(yiq, color.a);
}

technique Draw
{
	pass
	{
		vertex_shader = mainTransform(v_in);
		pixel_shader = mainImage(v_in);
	}
}
