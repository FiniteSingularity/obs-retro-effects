uniform float4x4 ViewProj;
uniform texture2d image;
uniform float2 uv_size;

float3 yiq2rgb(float3 color) {
	float3x3 rgb = {
		1.0000,  1.0000,  1.0000,
		0.9560, -0.2720, -1.1060,
		0.6210, -0.6474,  1.7046
	};
	
	return mul(rgb, color);
}

sampler_state textureSampler{
    Filter = Linear;
    AddressU = Clamp;
    AddressV = Clamp;
    MinLOD = 0;
    MaxLOD = 0;
};

struct VertData
{
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
};

VertData mainTransform(VertData v_in)
{
	v_in.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	return v_in;
}

float4 mainImage(VertData v_in) : TARGET
{
	float4 yiq = image.Sample(textureSampler, v_in.uv);
	return yiq;
	float3 rgb = yiq2rgb(yiq.rgb);

	return float4(rgb, yiq.a);
}

technique Draw
{
	pass
	{
		vertex_shader = mainTransform(v_in);
		pixel_shader = mainImage(v_in);
	}
}
