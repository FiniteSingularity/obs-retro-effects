uniform float4x4 ViewProj;
uniform texture2d image;
uniform texture2d prior_frame;
uniform float2 uv_size;
uniform float frame;
uniform float thickness;
uniform float4 brightness_reduction;

sampler_state textureSampler{
    Filter = Linear;
    AddressU = Clamp;
    AddressV = Clamp;
    MinLOD = 0;
    MaxLOD = 0;
};

struct VertData
{
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
};

VertData mainTransform(VertData v_in)
{
	v_in.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	return v_in;
}

float4 mainImage(VertData v_in) : TARGET
{
	float2 coord = v_in.uv * uv_size;
	float cur_row = fmod(floor(coord.y/thickness) + frame, 2.0);
	float4 color = cur_row > 0.5f ? image.Sample(textureSampler, v_in.uv) : (prior_frame.Sample(textureSampler, v_in.uv) * brightness_reduction);
	return color;
}

technique Draw
{
	pass
	{
		vertex_shader = mainTransform(v_in);
		pixel_shader = mainImage(v_in);
	}
}
